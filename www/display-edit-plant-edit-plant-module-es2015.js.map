{"version":3,"sources":["./src/app/plants/display/edit-plant/edit-plant.page.html","./src/app/plants/display/edit-plant/edit-plant-routing.module.ts","./src/app/plants/display/edit-plant/edit-plant.module.ts","./src/app/plants/display/edit-plant/edit-plant.page.scss","./src/app/plants/display/edit-plant/edit-plant.page.ts"],"names":[],"mappings":"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","file":"display-edit-plant-edit-plant-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n        [defaultHref]=\\\"'/plants/tabs/display'\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Edit Offer</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"onUpdatePlant()\\\" [disabled]=\\\"!form?.valid\\\">\\n        <ion-icon name=\\\"checkmark\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"isLoading\\\" text-center>\\n    <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n  <form [formGroup]=\\\"form\\\" *ngIf=\\\"!isLoading\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Nazwa</ion-label>\\n            <ion-input\\n              type=\\\"text\\\"\\n              autocomplete\\n              autocorrect\\n              formControlName=\\\"name\\\"\\n            ></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"> Wybierz kategorię</ion-label>\\n            <ion-select okText=\\\"Okej\\\" cancelText=\\\"Odrzuć\\\" formControlName=\\\"category\\\">\\n              <ion-select-option value=\\\"{{ category.id }}\\\" *ngFor=\\\"let category of categories\\\">{{ category.name }}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      \\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPlantPage } from './edit-plant.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPlantPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPlantPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPlantPageRoutingModule } from './edit-plant-routing.module';\n\nimport { EditPlantPage } from './edit-plant.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPlantPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditPlantPage]\n})\nexport class EditPlantPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW50cy9kaXNwbGF5L2VkaXQtcGxhbnQvZWRpdC1wbGFudC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlantsService } from '../../plants.service';\nimport { NavController, LoadingController, AlertController } from '@ionic/angular';\nimport { Plant } from '../../plant.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-plant',\n  templateUrl: './edit-plant.page.html',\n  styleUrls: ['./edit-plant.page.scss'],\n})\nexport class EditPlantPage implements OnInit {\n  plant: Plant;\n  plantId: string;\n  form: FormGroup;\n  categories: String[];\n  isLoading = false;\n  private plantSubscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private plantsService: PlantsService,\n    private navCtrl: NavController,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('plantId')) {\n        console.log(\"back\");\n        this.navCtrl.navigateBack('/plants/tabs/display');\n        return;\n      }\n      this.plantId = paramMap.get('plantId');\n      this.isLoading = true;\n      this.plantSubscription = this.plantsService\n        .getPlant(paramMap.get('plantId'))\n        .subscribe(\n          plant => {\n            this.plant = plant.plant;\n            this.categories = plant.categories;\n            console.log(this.plant);\n            this.form = new FormGroup({\n              name: new FormControl(this.plant.name, {\n                updateOn: 'blur'\n              }),\n              category: new FormControl(this.plant.category_id, {\n                updateOn: 'blur'\n              })\n            });\n            this.isLoading = false;\n          },\n          error => {\n            this.alertCtrl\n              .create({\n                header: 'Wystąpił błąd!',\n                message: 'Nie można pobrać danych o roślinie.',\n                buttons: [\n                  {\n                    text: 'Okay',\n                    handler: () => {\n                      this.router.navigate(['/plants/tabs/display']);\n                    }\n                  }\n                ]\n              })\n              .then(alertEl => {\n                alertEl.present();\n              });\n          }\n        );\n    });\n  }\n\n  onUpdatePlant() {\n    if (!this.form.valid) {\n      return;\n    }\n    this.loadingCtrl\n      .create({\n        message: 'Aktualizuje dane...'\n      })\n      .then(loadingEl => {\n        loadingEl.present();\n        this.plantsService\n          .updatePlant(\n            this.plant.id,\n            this.form.value.name,\n            this.form.value.category\n          )\n          .subscribe(resp => {\n            console.log(\"RESP: \"+resp);\n            loadingEl.dismiss();\n            this.form.reset();\n            this.router.navigate(['/plants/tabs/display']);\n          });\n      });\n  }\n\n}\n"],"sourceRoot":""}