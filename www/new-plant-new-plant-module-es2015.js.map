{"version":3,"sources":["./src/app/plants/new-plant/new-plant.page.html","./src/app/plants/new-plant/new-plant-routing.module.ts","./src/app/plants/new-plant/new-plant.module.ts","./src/app/plants/new-plant/new-plant.page.scss","./src/app/plants/new-plant/new-plant.page.ts"],"names":[],"mappings":"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","file":"new-plant-new-plant-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Dodaj nową roślinę</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\" *ngIf=\\\"!isLoading\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Nazwa</ion-label>\\n            <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"name\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Opis</ion-label>\\n            <ion-input type=\\\"text\\\" autocorrect formControlName=\\\"description\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"> Wybierz kategorię</ion-label>\\n            <ion-select okText=\\\"Okej\\\" cancelText=\\\"Odrzuć\\\" formControlName=\\\"category\\\">\\n              <ion-select-option value=\\\"{{ category.id }}\\\" *ngFor=\\\"let category of categories\\\">{{ category.name }}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Nasłoneczenie</ion-label>\\n            <ion-input type=\\\"number\\\" min=\\\"1\\\" max=\\\"3\\\" formControlName=\\\"insolation\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Wilgotność</ion-label>\\n            <ion-input type=\\\"number\\\" min=\\\"1\\\" max=\\\"3\\\" formControlName=\\\"humidity\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Temperatura</ion-label>\\n            <ion-input type=\\\"number\\\" min=\\\"1\\\" max=\\\"3\\\" formControlName=\\\"temperature\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Trudność hodowli</ion-label>\\n            <ion-input type=\\\"number\\\" min=\\\"1\\\" max=\\\"3\\\" formControlName=\\\"difficulty\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      \\n        <ion-button expand=\\\"block\\\" (click)=\\\"onAddPlant()\\\" [disabled]=\\\"!form.valid\\\">Dodaj</ion-button>\\n     \\n    </ion-grid>\\n  </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPlantPage } from './new-plant.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPlantPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPlantPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPlantPageRoutingModule } from './new-plant-routing.module';\n\nimport { NewPlantPage } from './new-plant.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewPlantPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NewPlantPage]\n})\nexport class NewPlantPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW50cy9uZXctcGxhbnQvbmV3LXBsYW50LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PlantsService } from '../plants.service';\nimport { LoadingController } from '@ionic/angular';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Plant } from '../plant.model';\n\n\ninterface Category {\n  id: number,\n  name: string,\n  image: string\n}\n\n@Component({\n  selector: 'app-new-plant',\n  templateUrl: './new-plant.page.html',\n  styleUrls: ['./new-plant.page.scss'],\n})\nexport class NewPlantPage implements OnInit {\n  isLoading = false;\n  form: FormGroup;\n  categories: Category;\n  constructor(private plantsService: PlantsService, private loadCtr: LoadingController, private router: Router) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.loadCtr.create({ message: 'Pobieram dane..' }).then(alert => {\n      alert.present();\n      this.plantsService.getCategories().subscribe(\n        resp => {\n          this.categories = resp;\n          alert.dismiss();\n        }\n      );\n\n    });\n    this.form = new FormGroup({\n      name: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      }),\n      description: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      }),\n      category: new FormControl(null, {\n        updateOn: 'blur'\n      }),\n      insolation: new FormControl(1, {\n        updateOn: 'blur'\n      }),\n      humidity: new FormControl(1, {\n        updateOn: 'blur'\n      }),\n      temperature: new FormControl(1, {\n        updateOn: 'blur'\n      }),\n      difficulty: new FormControl(1, {\n        updateOn: 'blur'\n      })\n    });\n    this.isLoading = false;\n  }\n  onAddPlant() {\n    this.loadCtr.create({ message: \"Dodawanie rośliny\" }).then(alert => {\n      alert.present();\n     \n      this.plantsService.addPlant(this.form.value.name, this.form.value.description, this.form.value.category, this.form.value.insolation, this.form.value.humidity, this.form.value.temperature, this.form.value.difficulty).subscribe(resp => {\n        this.form.reset();\n        alert.dismiss();\n        this.router.navigate(['/plants/tabs/display']);\n      });\n    });\n  }\n}\n"],"sourceRoot":""}